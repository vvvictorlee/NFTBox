{
	"compiler": {
		"version": "0.6.12+commit.27d51765"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "TransferredEther",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "ids",
						"type": "uint256[]"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "amounts",
						"type": "uint256[]"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "WithdrewERC1155",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "WithdrewERC20",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "tokenIds",
						"type": "uint256[]"
					}
				],
				"name": "WithdrewERC721",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "to",
						"type": "address"
					}
				],
				"name": "destroy",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "to",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "value",
								"type": "uint256"
							},
							{
								"internalType": "bytes",
								"name": "data",
								"type": "bytes"
							}
						],
						"internalType": "struct LootBox.Call[]",
						"name": "calls",
						"type": "tuple[]"
					}
				],
				"name": "executeCalls",
				"outputs": [
					{
						"internalType": "bytes[]",
						"name": "",
						"type": "bytes[]"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "initialize",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IERC20Upgradeable[]",
						"name": "erc20",
						"type": "address[]"
					},
					{
						"components": [
							{
								"internalType": "contract IERC721Upgradeable",
								"name": "token",
								"type": "address"
							},
							{
								"internalType": "uint256[]",
								"name": "tokenIds",
								"type": "uint256[]"
							}
						],
						"internalType": "struct LootBox.WithdrawERC721[]",
						"name": "erc721",
						"type": "tuple[]"
					},
					{
						"components": [
							{
								"internalType": "contract IERC1155Upgradeable",
								"name": "token",
								"type": "address"
							},
							{
								"internalType": "uint256[]",
								"name": "ids",
								"type": "uint256[]"
							},
							{
								"internalType": "uint256[]",
								"name": "amounts",
								"type": "uint256[]"
							},
							{
								"internalType": "bytes",
								"name": "data",
								"type": "bytes"
							}
						],
						"internalType": "struct LootBox.WithdrawERC1155[]",
						"name": "erc1155",
						"type": "tuple[]"
					},
					{
						"internalType": "address payable",
						"name": "to",
						"type": "address"
					}
				],
				"name": "plunder",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Brendan Asselstine",
			"details": "This contract is intended to be counterfactually instantiated via CREATE2.",
			"kind": "dev",
			"methods": {
				"destroy(address)": {
					"params": {
						"to": "The address to send remaining Ether to"
					}
				},
				"executeCalls((address,uint256,bytes)[])": {
					"params": {
						"calls": "The array of calls to be executed."
					},
					"returns": {
						"_0": "An array of the return values for each of the calls"
					}
				},
				"plunder(address[],(address,uint256[])[],(address,uint256[],uint256[],bytes)[],address)": {
					"params": {
						"erc1155": "Array of WithdrawERC1155 structs whose tokens should be transferred",
						"erc20": "Array of ERC20 token addresses whose entire balance should be transferred",
						"erc721": "Array of WithdrawERC721 structs whose tokens should be transferred",
						"to": "The address receiving all tokens"
					}
				}
			},
			"title": "Allows anyone to \"loot\" an address",
			"version": 1
		},
		"userdoc": {
			"events": {
				"TransferredEther(address,uint256)": {
					"notice": "Emitted when the contract transfer ether"
				},
				"WithdrewERC1155(address,uint256[],uint256[],bytes)": {
					"notice": "Emitted when an ERC1155 token is withdrawn"
				},
				"WithdrewERC20(address,uint256)": {
					"notice": "Emitted when an ERC20 token is withdrawn"
				},
				"WithdrewERC721(address,uint256[])": {
					"notice": "Emitted when an ERC721 token is withdrawn"
				}
			},
			"kind": "user",
			"methods": {
				"destroy(address)": {
					"notice": "Destroys this contract using `selfdestruct`"
				},
				"executeCalls((address,uint256,bytes)[])": {
					"notice": "Executes calls on behalf of this contract."
				},
				"plunder(address[],(address,uint256[])[],(address,uint256[],uint256[],bytes)[],address)": {
					"notice": "Transfers tokens to another account"
				}
			},
			"notice": "A LootBox allows anyone to withdraw all tokens or execute calls on behalf of the contract.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"lootbox/contracts/LootBox.sol": "LootBox"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"lootbox/contracts/LootBox.sol": {
			"keccak256": "0x73c95744d8359e93515d3ba1e37637421a1d04b5291ef793932c42b9a08f311f",
			"license": "MIT",
			"urls": [
				"bzz-raw://6f49d3875cd698ee3c5a81ce9bc6df884122006597970952bfbba304f62c1f67",
				"dweb:/ipfs/QmQFUpUFZeEoQNCyUuPbC9mPCpz6sFbyFPExW39P32nwPv"
			]
		},
		"openzeppelin-contracts-upgradeable/contracts/introspection/IERC165Upgradeable.sol": {
			"keccak256": "0x4784c3f8a520a739dd25d76f514833a653990902d0e21601aed45bda44c87524",
			"license": "MIT",
			"urls": [
				"bzz-raw://359411cc44a4499f37d46562ef3f348db443f9a699138c1797264d20b14697b7",
				"dweb:/ipfs/QmUmeQNUwve4MFCc1ace6zMnstqa8S9SZe1nXG9THcpQ5v"
			]
		},
		"openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155Upgradeable.sol": {
			"keccak256": "0xcbc02d192c55298cf65e5695375c839eac979a597a0fbdc1635195c4d28ca5ac",
			"license": "MIT",
			"urls": [
				"bzz-raw://45ee9cb5a548db9a3805b934f995770272583ef6c0abd31aeffb7bd1f4c2f696",
				"dweb:/ipfs/QmcHGENdTcAzU6NuaoJWgMDA2rH1JdCWJf2EXRnSE967Qw"
			]
		},
		"openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
			"keccak256": "0xa1931c47a617014f858580db625aa0dcf343796f39acd4b5b51effc092a1f0a9",
			"license": "MIT",
			"urls": [
				"bzz-raw://2cbeb499bad52667b96dd7df8e9b1f583e8c07afaba0018a75e5b7ff6e777173",
				"dweb:/ipfs/QmPLJnuhEcWnpmhMHKsiuVHVxMwb5k6idYyjajbrtZLz5B"
			]
		},
		"openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721Upgradeable.sol": {
			"keccak256": "0x3dab19bb4a63bcbda1ee153ca291694f92f9009fad28626126b15a8503b0e5ff",
			"license": "MIT",
			"urls": [
				"bzz-raw://ecc8ae8f1f85e11b6f749e147ac298d1d66879f3bfe3d4518b919f7b6151a73b",
				"dweb:/ipfs/QmYXZfcnCd1N1AaxUTfNQjNHJXAAfVGvae6Bte1SfTCKEz"
			]
		}
	},
	"version": 1
}